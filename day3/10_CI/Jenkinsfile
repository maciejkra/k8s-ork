pipeline {  
    environment {
        registry = "krajewskim/python"
        registryCredential = 'dockerhub'
        dockerImage = ''
        KUBECTL_NAMESPACE="jenkins-deploy"
        CI_APP_NAME="python-deployment"
    } 
    agent any
    stages {
    stage('Building image') {
      steps{
        script {
            dir('smth to put here') {
                dockerImage = docker.build registry, '-f Dockerfile.solution .'
            }
        }
      }
    }
    stage('Deploy Image') {
      steps{    script {
          docker.withRegistry( '', registryCredential ) {
            dockerImage.push()
          }
        }
      }
    }
    stage('Remove Unused docker image') {
      steps{
        sh "docker rmi $registry"
      }
    }
    stage('List pods') {
            agent {
                docker {
                    image 'krajewskim/kubectl'
                    args '-v /tmp:/tmp --entrypoint='
                }
            }
            steps{
                withKubeConfig(credentialsId: 'docker-for-desktop', namespace: 'default') {

                        sh 'kubectl create namespace $KUBECTL_NAMESPACE -o yaml --dry-run | kubectl apply -f -'
                        sh 'kubectl config set-context $(kubectl config current-context) --namespace=$KUBECTL_NAMESPACE'


                        sh '''
                            kubeval --strict day1/07_deployment/solution/*
                            kubectl apply -f day1/07_deployment/solution
                            if ! kubectl rollout status deployment $CI_APP_NAME; then
                                kubectl rollout undo deployment $CI_APP_NAME;
                                kubectl rollout status deployment $CI_APP_NAME;
                                exit 1;
                            fi
                            echo 'Rollout completed'
                        '''
                    }
        
            }
        }
  }
}